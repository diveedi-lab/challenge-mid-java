<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">
	<!-- Enable features -->
	<featureManager>
		<feature>
			jakartaee-9.1
		</feature>
		<feature>
			microProfile-5.0
		</feature>
		<feature>
			jdbc-4.2
		</feature>
	</featureManager>
	<library id="jdbcLib">
		<fileset dir="jdbc" includes="*.jar" />
	</library>
	<dataSource jndiName="jdbc/defaultDB" type="javax.sql.DataSource">
		<jdbcDriver libraryRef="jdbcLib" />
		<properties.postgresql URL="jdbc:postgresql://localhost:5432/challenge" user="postgres" password="secret" />
	</dataSource>
	<!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
	<!--
	For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an
	encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element.
	Then uncomment the keyStore element.
	-->
	<!-- <keyStore password=""/> -->
	<!--
	For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
	basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
	generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
	Then uncomment the user element.
	-->
	<basicRegistry id="basic" realm="BasicRealm">
		<!-- <user name="yourUserName" password="" /> -->
	</basicRegistry>
	<!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
	<httpEndpoint id="defaultHttpEndpoint" host="localhost" httpPort="9080" httpsPort="9443" />
	<!-- Automatically expand WAR files and EAR files -->
	<applicationManager autoExpand="true" />
	<!-- Configures the application on a specified context root -->
	<webApplication contextRoot="/api" location="challenge.war" />
	<!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
	<ssl id="defaultSSLConfig" trustDefaultCerts="true" />
</server>
